unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls;

type
  TForm1 = class(TForm)
    TreeView1: TTreeView;
    Button1: TButton;
    Memo1: TMemo;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Edit1: TEdit;
    Label5: TLabel;
    Button2: TButton;
    procedure Button1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

  TData = Integer; { Тип указателя на узел. }
  TPNode = ^TNode; { Тип узла дерева. }

  TNode = record
    Data: TData; { Ключ (основные данные) узла дерева. }
    PLeft, PRight: TPNode; { Указатели на левый и правый узел. }
  end;

var
  Form1: TForm1;
  NodeData: integer;
  TreeHead: integer;

  InputData: string;

  PTree : TPNode;

implementation

{$R *.dfm}



procedure AddNode(var aPNode: TPNode; const aData: TData);
begin
  if aPNode = nil then { Вставка узла. }
  begin
    New(aPNode); { Выделяем память для узла. }
    aPNode^.Data := aData; { Записываем в узел значение ключа. }
    aPNode^.PLeft := nil; { Обнуляем указатель на левого потомка. }
    aPNode^.PRight := nil; { Обнуляем указатель на правого потомка. }

    TreeHead := aData;
    //showMessage('1');
  end

  else if aData <= aPNode^.Data then { Поиск места вставки в левой ветви. }
  begin
    //showMessage('left');
    AddNode(aPNode^.PLeft, aData);
    //NodeData := aPNode^.PLeft.Data;

  end

  else if aData > aPNode^.Data then { Поиск места вставки в правой ветви. }
  begin
    //showMessage('right');
    AddNode(aPNode^.PRight, aData);
    //NodeData := aPNode^.PRight.Data;

  end;
end;

 procedure PrintTree(treenode:TTreeNode; root:TPNode);
 var newnode : TTreeNode;
 begin
    if Assigned(root) then
    begin
       newnode := Form1.TreeView1.Items.AddChild(treenode, IntToStr(root^.Data));
       PrintTree(newnode, root^.PLeft);
       PrintTree(newnode, root^.PRight);

    end;
 end;

procedure TreeWrite(const aPNode : TPNode);
begin
  if aPNode = nil then
    exit;

  TreeWrite(aPNode^.PLeft);
  InputData := InputData + inttostr(aPNode^.Data);
  Form1.Label2.Caption := InputData;
  TreeWrite(aPNode^.PRight);

end;

procedure TForm1.Button1Click(Sender: TObject);
var
  aPNode: TPNode ;
  Data: TData;
  tryAdd: Integer;
  i: integer;
begin
  for i:= 0 to Memo1.Lines.Count - 1 do
  begin
    Data := strtoint(Memo1.Lines[i]);
    AddNode(PTree, Data);
  end;

  TreeWrite(PTree);
  PrintTree(nil, PTree);

end;

procedure TForm1.FormShow(Sender: TObject);
begin
   PTree := nil;
end;

end.
